Description
You are tasked with building a Text service, that has 4 endpoints:

Note that you can name your controller classes and methods whatever you like.

Endpoint 1 - Camelize
Write an endpoint that maps to GET /camelize with two parameters:

original (required) - a string in snake_case
initialCap (optional) - a boolean

It should render the given original string in camelCase.
If initialCap is true, it uses CamelCase (the initial letter is capitalized).

Examples

GET /camelize?original=this_is_a_thing => thisIsAThing

GET /camelize?original=this_is_a_thing&initialCap=true => ThisIsAThing



Endpoint 2 - Redact
Write an endpoint that maps to GET /redact. The endpoint should take:

A parameter named original, which is a String
Multiple parameters named badWord
It should split the original String on spaces, and replace all badWords with *s of the same length.

Examples

If you send the following request:

GET /redact?original=A little of this and a little of that&badWord=little&badWord=this
You should get the following response:

A ****** of **** and a ****** of that
If you send this request:

GET /redact?original=A little of this and a little of that&badWord=little
You should get the following response:

A ****** of this and a ****** of that
HINT: To get multiple values on the same parameter name you can use a List. See the below example that sums up multiple numbers passed to a parameter named "n".

    //calling http://localhost:8080/sum?n=1&n=2&n=3
    //prints: the total is 6
    @GetMapping("/sum")
    public String getSumOfNumbers(@RequestParam(value="n") List<Integer> numbers){

        int total=0;

        for (int i=0;i<numbers.size();i++) {
            total += numbers.get(i);
        }

        return "the total is "+total;

    }



Endpoint 3 - Encode
Build an endpoint that maps to POST /encode that accepts url-encoded form data. It should take two parameters:

message - a message to decode
key - the English alphabet, in some random order
It should take the message, and swap each letter for the letter at the same position in the alphabet.

Example

If you send:

POST /encode

message=a little of this and a little of that&key=mcxrstunopqabyzdefghijklvw
Then the response should be:

m aohhas zt hnog myr m aohhas zt hnmh
So you take the key that was given, and line it up with the English alphabet:

abcdefghijklmnopqrstuvwzyz
mcxrstunopqabyzdefghijklvw

You see that "a" in the English alphabet is at the same index as "m" in the key. So all a characters become m, hence:

a little of this and a little of that
m aohhas zt hnog myr m aohhas zt hnmh




Endpoint 4 - Sed
Build an endpoint that maps to POST /s/<find>/<replacement>. The post body should be text, and the endpoint should return the posted text, replacing all instances of find with replace.

Example

POST /s/little/lot

a little of this and a little of that
Would render:

a lot of this and a lot of that
Create a new repo for this project and submit your repo link below.